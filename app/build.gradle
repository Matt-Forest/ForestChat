/*
 * Copyright (C) 2021 Matthieu Bouquet <matthieu@forestchat.org>
 *
 * This file is part of ForestChat.
 *
 * ForestChat is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ForestChat is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ForestChat.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.forest.forestchat"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 2
        versionName "1.0.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def appName = variant.flavorName
                def appVersion = variant.versionName
                def buildType = variant.buildType.name

                outputFileName = "app-${appName}-${buildType}-${appVersion}.apk"
            }
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    flavorDimensions "version"

    productFlavors {

        devForestChat {
            dimension "version"
            applicationIdSuffix ".dev"
        }

        prodForestChat {
            dimension "version"
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
        debug {
            versionNameSuffix "-debug"
        }
    }

    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
            arg("room.incremental", "true")
        }
    }

    buildFeatures {
        viewBinding true
    }

}

androidExtensions {
    features = ["parcelize"]
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // KotlingenerateStubs
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.0"

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"

    // google
    implementation 'com.google.dagger:hilt-android:2.35.1'
    kapt 'com.google.dagger:hilt-compiler:2.35.1'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.room:room-runtime:2.3.0"
    implementation "androidx.room:room-ktx:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"
    implementation 'com.google.android.gms:play-services-ads:20.1.0'
    implementation 'com.google.android.ump:user-messaging-platform:1.0.0'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:28.0.1')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // live event
    implementation "com.github.Zhuinden:live-event:1.2.0"

    // android smms-mms
    implementation ("com.klinkerapps:android-smsmms:5.2.6") {
        exclude group: 'com.squareup.okhttp', module: 'okhttp'
        exclude group: 'com.squareup.okhttp', module: 'okhttp-urlconnection'
    }

    // moshi
    implementation "com.squareup.moshi:moshi-adapters:1.11.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.11.0"

    // coil
    implementation("io.coil-kt:coil:1.2.1")

    // event bus
    implementation 'org.greenrobot:eventbus:3.2.0'

    // Coil
    implementation "io.coil-kt:coil:1.2.1"

    // Shortcut Badger
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

kapt {
    correctErrorTypes true
}
